#!/usr/bin/env bash

set -e

# Builds 'service-mfa' docker image with the version given below. 

# Determine the build_tag and whether we need to release.
scripts/build_name

version=$(cat build_tag)
if [ -e release_build ]; then
  echo "This is a release build, it will update 'latest' tags."
fi

# Copy the release version to the project root, so we can later display it to
# clients:
cp ./build_tag ../.api-version

function release {
  local host='eu.gcr.io'
  local service_name=$1
  local version=$2
  
  local local_name="$service_name:$version"
  local remote_name="$host/$service_name:$version"
  
  if [ -e ../release_build ]; then
    # Publication to registry:
    sudo docker tag $local_name $remote_name
    sudo docker push $remote_name
  fi
}

# Create a release.tar that contains all the code. 
pushd ..
tar cf build/release.tar \
  --exclude .git \
  --exclude node_modules \
  --exclude build \
  .
popd

echo "---------------------------- building service-mfa ------------------------------"
pushd service-mfa
cp ../release.tar .
sudo docker build -f Dockerfile -t pryvio/service-mfa:$version .
release "pryvio/service-mfa" $version
popd
